spring:
  profiles:
    active: dev
  jpa:
    hibernate:
      ddl-auto: create     # DB ??? ?? (none, create, create-drop, update, validate)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true      # ?? ?? ?? (??)
        show_sql: true        # ?? ?? ??
        use_sql_comments: true # ?? ??? ?? ??
  ai:
    openai:
      api-key: ${GEMINI_API_KEY}
      chat:
        base-url: "https://generativelanguage.googleapis.com/v1beta/openai/"
        options:
          model: "gemini-2.5-flash"
          temperature: 0.5 # 모델의 출력 다양성 조절 (0.0 ~ 1.0)
        completions-path: "/chat/completions"
  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ${KAKAO_OAUTH2_CLIENT_ID}
            scope: profile_nickname, profile_image # 카카오 프사, 닉네임 가져옴
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
          google:
            client-id: ${GOOGLE_OAUTH2_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH2_CLIENT_SECRET}
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            client-name: Google
            scope: profile
          naver:
            client-id: ${NAVER_OAUTH2_CLIENT_ID}
            client-secret: ${NAVER_OAUTH2_CLIENT_SECRET}
            scope: profile_nickname, profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
springdoc:
  default-produces-media-type: application/json;charset=UTF-8
logging:
  level:
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
    com.back: DEBUG
custom:
  jwt:
    secretKey: ${JWT_SECRET_KEY}
  accessToken:
    expirationSeconds: "#{60*20}"
server:
  forward-headers-strategy: native
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
naver:
  client-id: ${NAVER_CLIENT_ID}
  client-secret: ${NAVER_CLIENT_SECRET}
  base-url: "https://openapi.naver.com/v1/search/news?query="
  news:
    display: 10
    sort: sim
  crawling:
    delay: 1000 # 줄이지 말아주세요
keyword:
  overuse:
    days: 5
    threshold: 3
  history:
    recent-days: 5 # 키워드 history 조회 기준
  cleanup:
    retention-days: 5 # 키워드 history 삭제 기준
